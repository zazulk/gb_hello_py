# Реализовать структуру данных «Товары». Она должна представлять собой список
# кортежей. Каждый кортеж хранит информацию об отдельном товаре. В кортеже
# должно быть два элемента — номер товара и словарь с параметрами, то есть
# характеристиками товара: название, цена, количество,
# единица измерения. Структуру нужно сформировать программно, запросив все
# данные у пользователя.

# список для кортежей с информацией по товарам
products = []
# ввел ли пользователь стоп
stop = False

print(
    "Сейчас будем собирать информацию о товарах. Чтобы закончить, напишите "
    "\"Стоп\".")
# счетчик для нумерации в итоговом списке товаров
product_id = 0

# собираем информацию о товарах, пока пользователь не напишет в одном из
# полей "стоп"
while not stop:
    if len(products) == 0:
        print("Заполняем информацию первого товара.")
    else:
        print("\nЗаполняем информацию следующего товара.")
    # шаблон словаря для заполнения данными о товаре
    # указываем название ожидаемого типа значения для каждого поля
    sample = {
        "название": "str",
        "цена": "float",
        "количество": "float",
        "единицы": "str"
    }
    # массив строковых цифр
    digits = str(list(range(0, 10))).replace(",", "").replace("[", "").replace(
        "]", "").split()

    new_product = sample.copy()
    for item in new_product:
        # заставляем пользователя вводить значения пока дефолтные значения
        # полей не изменятся на введенные им или пока он не напишет "Стоп"
        while new_product[item] in ["str", "float"]:
            inp = input(f"{item:>13}: ").strip()
            # отрезаем точки по краям
            if inp.startswith("."):
                inp = inp[1:]
            if inp.endswith("."):
                inp = inp[:len(inp) - 1]
            # если пользователь ничего не ввел
            if not inp:
                print(f"{'':>12}⚠️ Нужно ввести значение.")
                continue
            if inp.lower() in ["стоп", "stop", "cnjg", "флюгегехаймен"]:
                stop = True
                print("Закончили.")
                break
            # если ожидаем числовые данные
            if new_product[item] == "float":
                # валидируем введенное пользователем число
                # проверяем кол-во точек и запятых
                is_valid_numb = inp.count(",") <= 1 and inp.count(".") <= 1
                if is_valid_numb:
                    # обходим все символы из ввода, чтобы понять число ли это
                    for char in inp:
                        # символ является цифрой, точкой или запятой
                        is_valid_numb = char in digits or char in [".", ","]
                        if not is_valid_numb:
                            break
                if not is_valid_numb:
                    print(f"{'':>12}⚠️ Нужно ввести число.")
                    continue
                # если валидное число, на всякий меняем запятую на точку
                # превращаем во float и записываем в словарь
                new_product[item] = float(inp.replace(",", "."))

            else:
                new_product[item] = inp
        if stop:
            break
    if not stop:
        # если пользователь не сказал стоп, добавляем кортеж
        # с собранной информацией в список товаров
        products.append(tuple([product_id, new_product]))
        product_id += 1

if len(products) > 0:
    print(f"\nВот, что получилось:\n{products}.")

    # собираем аналитику
    analitics = {
        "название": [],
        "цена": [],
        "количество": [],
        "единицы": []
    }
    for elem in products:
        for item in elem[1]:
            analitics[item].append(elem[1][item])
    analitics["единицы"] = list(set(analitics["единицы"]))
    print(f"\nАналитика: \n{analitics}")
else:
    print("Не получилось заполнить список товаров.")
