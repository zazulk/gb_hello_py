# –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –¥–≤–∞ –Ω–µ–±–æ–ª—å—à–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞:
# ‚óè –∏—Ç–µ—Ä–∞—Ç–æ—Ä, –≥–µ–Ω–µ—Ä–∏—Ä—É—é—â–∏–π —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞, –Ω–∞—á–∏–Ω–∞—è —Å —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ;
# ‚óè –∏—Ç–µ—Ä–∞—Ç–æ—Ä, –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ–∫–æ—Ç–æ—Ä–æ–≥–æ —Å–ø–∏—Å–∫–∞, –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –∑–∞—Ä–∞–Ω–µ–µ.

# –í–∞—Ä–∏–∞–Ω—Ç 2: –±–µ–∑ break

from itertools import count
from itertools import cycle
from itertools import islice
from my_funcs import get_numb_from_user
import random

print("–í–≤–æ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ 'Q' –¥–ª—è –≤—ã—Ö–æ–¥–∞.")
max_count = None
quest_1 = "—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, –Ω–∞—á–∏–Ω–∞—è —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ–º –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å:"
start_n = get_numb_from_user(quest_1, kind_of_numb="int", positive=True,
                             negative=True)

if start_n is not None:
    max_count = get_numb_from_user("—Å–∫–æ–ª—å–∫–æ —á–∏—Å–µ–ª —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å:", try_limit=3,
                                   kind_of_numb="int", positive=True,
                                   negative=False, is_with_zero=False)

if start_n is not None and max_count is not None:
    result = []
    gen_count = count(start_n)
    while len(result) != max_count:
        n = next(gen_count)
        result.append(n)
        print(n)

    print(f"\n‚úÖ –ò—Ç–æ–≥–æ: {', '.join(map(str, list(islice(count(start_n), max_count))))}")

print("*" * 30)

phrase = "–î–µ–ª—É –≤—Ä–µ–º—è, –ø–æ—Ç–µ—Ö–µ —á–∞—Å"
words = [w.upper().replace(",", "") for w in phrase.split()]
limit = random.randint(round(len(words) * 1.5), round(len(words) * 2.5))
print(f"üÜé –ê —Å–µ–π—á–∞—Å —è –±—É–¥—É –ø–æ–≤—Ç–æ—Ä—è—Ç—å —Å–ª–æ–≤–∞ –∏–∑ —Ñ—Ä–∞–∑—ã ¬´{phrase}¬ª.")

gen_cycle = cycle(words)
c = 0
while c != limit:
    print(next(gen_cycle))
    c += 1
