# –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –¥–≤–∞ –Ω–µ–±–æ–ª—å—à–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞:
# ‚óè –∏—Ç–µ—Ä–∞—Ç–æ—Ä, –≥–µ–Ω–µ—Ä–∏—Ä—É—é—â–∏–π —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞, –Ω–∞—á–∏–Ω–∞—è —Å —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ;
# ‚óè –∏—Ç–µ—Ä–∞—Ç–æ—Ä, –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ–∫–æ—Ç–æ—Ä–æ–≥–æ —Å–ø–∏—Å–∫–∞, –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –∑–∞—Ä–∞–Ω–µ–µ.

# –í–∞—Ä–∏–∞–Ω—Ç 2: –±–µ–∑ break

from itertools import count
from itertools import cycle
from itertools import islice
from my_funcs import is_stop
from my_funcs import is_float_numb
from my_funcs import is_numb_str
import random

print("–í–≤–æ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ 'Q' –¥–ª—è –≤—ã—Ö–æ–¥–∞.")

start_n = 0
max_count = 0
try_count = 0
result = []
stop = False

while not start_n:
    numb_inp = input(f"{'':>4} —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, –Ω–∞—á–∏–Ω–∞—è —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ–º "
                     f"–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å: ").strip()
    if numb_inp == "":
        continue
    if is_stop(numb_inp):
        stop = True
        break
    if is_float_numb(numb_inp) or not is_numb_str(numb_inp):
        print(f"{'‚ö†Ô∏è':>8} –ù—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞.")
        continue
    start_n = int(numb_inp)
    if start_n == 0:
        break

if stop:
    print("–ù—É –∏ –ª–∞–¥–Ω–æ :(")

if not stop:
    while not max_count:
        if try_count >= 3:
            max_count = random.randint(5, 15)
            print(f"{'':>5}–¢–∞–∫, –ª–∞–¥–Ω–æ, —Å–∞–º –≤—ã–±–µ—Ä—É. –°–≥–µ–Ω–µ—Ä–∏—Ä—É—é {max_count} —á–∏—Å–µ–ª.")
            break
        max_inp = input(f"{'':>5}—Å–∫–æ–ª—å–∫–æ —á–∏—Å–µ–ª —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å: ").strip()
        if not max_inp:
            try_count += 1
            continue
        if is_stop(max_inp):
            stop = True
            break
        if is_float_numb(max_inp) or not is_numb_str(max_inp):
            try_count += 1
            print(f"{'‚ö†Ô∏è':>8} –ù—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞.")
            continue
        max_count = int(max_inp)
        if max_count <= 0:
            max_count = 0
            try_count += 1
            print(f"{'‚ö†Ô∏è':>8} –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω—É–ª–µ–º –∏–ª–∏ "
                  f"–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º.")
            continue

    gen_count = count(start_n)
    while len(result) != max_count:
        n = next(gen_count)
        result.append(n)
        print(n)

    print(f"\n‚úÖ –ò—Ç–æ–≥–æ: {', '.join(map(str, list(islice(count(start_n), max_count))))}")

print("*" * 30)

phrase = "–î–µ–ª—É –≤—Ä–µ–º—è, –ø–æ—Ç–µ—Ö–µ —á–∞—Å"
words = [w.upper().replace(",", "") for w in phrase.split()]
limit = random.randint(round(len(words) * 1.5), round(len(words) * 2.5))
print(f"üÜé –ê —Å–µ–π—á–∞—Å —è –±—É–¥—É –ø–æ–≤—Ç–æ—Ä—è—Ç—å —Å–ª–æ–≤–∞ –∏–∑ —Ñ—Ä–∞–∑—ã ¬´{phrase}¬ª.")

gen_cycle = cycle(words)
c = 0
while c != limit:
    print(next(gen_cycle))
    c += 1
